<?php

namespace Siplec\CdBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CourrierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourrierRepository extends EntityRepository
{
    /**
     * Retourne les courriers pour la requete ajax necessaire à jqgrid trier selon la colonne
     *
     * @return array The entities.
     */
    public function getNbResultats(array $criteria, array $orderBy = null)
    {
//     	$result = $this->getEntityManager()
//     	->createQuery('SELECT COUNT(c.id) nb
// 		    			FROM SiplecCdBundle:Courrier c 
// 		    			ORDER BY c.id')
//     	->getOneOrNullResult();
//     	return $result['nb'];
    	return count($this->findBy($criteria));
    }
    
    /**
     * Retourne les courriers pour la requete ajax necessaire à jqgrid trier selon la colonne
     *
     * @return array The entities.
     */
    public function getSearch(array $criteria, array $orderBy = null, $limit = null, $offset = null)
    {
        return $this->findBy($criteria, $orderBy, $limit, ($offset-1)*$limit);
    }
    
    /**
     * Retourne les courriers non recus par adéqueation
     *
     * @return array les courriers à mettre dans l'excel au format tableau avec une ligne pour les titres
     */
    public function getNonReconnus()
    {
    	$tmp = $this->findBy(array('statut'=>'Envoyé', 'dateReceptionAdequation'=>NULL), array("dateReceptionSiplec"=>"asc"));
    	$results = array();
    		$results[] = array("Numéro dossier",
    				"Date reception Siplec",
    				"Num envoi",
    				"Type lettre",
    				"Type envoi",
    				"Statut",
    				"Date envoi",
    				"Commentaire"
    		);
    	foreach ($tmp as $courrier) {
    		$results[] = array($courrier->getNumDossier(),
    						$courrier->getDateReceptionSiplec()->format('d/m/Y'),
    						$courrier->getNumEnvoi(),
    						$courrier->getTypeLettre(),
    						$courrier->getTypeEnvoi(),
    						$courrier->getStatut(),
    						$courrier->getDateEnvoi()->format('d/m/Y'),
    						$courrier->getCommentaire(),
    		);
    	}
        return $results;
    }
    
    /**
     * Modifie le courrier qui fait référence au numDossier pour indiquer une date et heure de reception plus changement d'état
     *
     * @return boolean indication de courrier trouvé ou non
     */
    public function dossierAdequationReçu(Dossier $dossier)
    {
    	$tmp = $this->findBy(array('numDossier' => $dossier->getNumDossier(), 
    								'dateReceptionAdequation' => NULL,
    								'statut'=>'Envoyé'));
    	
    	if(count($tmp) == 1){
	    	$courrier = $tmp[0];
	    	$courrier->setDateReceptionAdequation(new \DateTime());
	    	$courrier->setStatut(Courrier::STATUT_RECU);
	    	$courrier->setDossier($dossier);
	    	
	    	$em = $this->getEntityManager();
	    	$em->persist($courrier);
	    	$em->flush();
	    	
	    	return true;
    	}else{
    		return false;
    	}
    }
}